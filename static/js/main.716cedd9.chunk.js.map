{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","movies","poster_path","original_title","release_date","vote_average","CardList","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","results","this","filteredMovies","filter","movie","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAQC,IAAI,QAAQC,IAAK,kCAAoCH,EAAMI,OAAOC,cACzF,mCAAOL,EAAMI,OAAOE,eAApB,OACA,mCAAO,iBAAmBN,EAAMI,OAAOG,aAAvC,OACA,mCAAO,YAAcP,EAAMI,OAAOI,aAAlC,WCJKC,G,MAAW,SAACT,GACzB,OACI,qBAAKC,UAAU,YAAf,SAEMD,EAAMI,OAAOM,KAAI,SAAAN,GAAM,OACvB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOO,WCNfC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACMb,UAAU,SACVc,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC4BNG,E,kDA/Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXd,OAAS,GACTe,YAAa,IALJ,E,qDASb,WAAqB,IAAD,OAClBC,MAAM,uFACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAErB,OAAQoB,EAAME,e,oBAG/C,WAAU,IAAD,OACP,EAAgCC,KAAKT,MAA7Bd,EAAR,EAAQA,OAAQe,EAAhB,EAAgBA,YACVS,EAAiBxB,EAAOyB,QAAO,SAAAC,GAAK,OAAIA,EAAMxB,eAAeyB,cAAcC,SAASb,EAAYY,kBACtG,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,eAAd,0BACA,cAAC,EAAD,CACEY,YAAc,eACdC,aAAgB,SAAAmB,GAAC,OAAI,EAAKR,SAAS,CAAEN,YAAac,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAU/B,OAAQwB,W,GA1BRQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.716cedd9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img className='image' alt=\"movie\" src={'http://image.tmdb.org/t/p/w500/' + props.movies.poster_path} />\r\n        <h3> { props.movies.original_title } </h3>\r\n        <h4> { 'Release Date: ' + props.movies.release_date } </h4>\r\n        <h4> { 'Votings: ' + props.movies.vote_average } </h4>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component'\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\nreturn(\r\n    <div className='card-list'>\r\n        {\r\n          props.movies.map(movies => (\r\n          <Card key={movies.id} movies={movies} />\r\n          ))\r\n        }\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n          className='search'\r\n          type='search' \r\n          placeholder={ placeholder }\r\n          onChange={ handleChange } \r\n    />\r\n)","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      movies : [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=15d2ea6d0dc1d476efbca3eba2b9bbfb')\n    .then(response => response.json())\n    .then(users => this.setState({ movies: users.results}));\n  }\n\n  render() {\n    const { movies, searchField } = this.state;\n    const filteredMovies = movies.filter(movie => movie.original_title.toLowerCase().includes(searchField.toLowerCase())); \n    return (\n      <div className=\"App\">\n        <h1 className='heading-font'> Movies-Box </h1>\n        <SearchBox\n          placeholder = 'Search Movie'\n          handleChange = {e => this.setState({ searchField: e.target.value })}\n        />\n        <CardList movies={filteredMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}